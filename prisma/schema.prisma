// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  productId          Int        @id @default(autoincrement())
  productName        String
  productImages      String[]
  productRating      Int?
  productPrice       Float
  productOrderAmount String?
  productDescription String
  productDetails     String
  Category           Category[]
  Order              Order[]
  owner              User       @relation(fields: [userId], references: [userId])
  userId             Int
  Record             Record[]
}

model Category {
  categoryId          Int       @id @default(autoincrement())
  categoryImage       String?
  categoryTitle       String
  categoryDescription String
  product             Product[]
}

model Record {
  recordId   Int      @id @default(autoincrement())
  recordTime DateTime
  belongTo   Product  @relation(fields: [productId], references: [productId])
  productId  Int
  quantity   Int
}

model User {
  userId      Int        @id @default(autoincrement())
  userEmail   String?    @unique
  password    String
  userName    String
  userReviews Review[]
  Product     Product[]
  Location    Location[]
}

model Location {
  locationId Int    @id @default(autoincrement())
  user       User   @relation(fields: [userId], references: [userId])
  userId     Int
  address    String
  postcode   String
  nation     String
}

model Review {
  reviewId          Int    @id @default(autoincrement())
  reviewName        String
  reviewTitle       String
  reviewDescription String
  reviewRating      Int
  reviewHelpfulness Int
  reviewer          User   @relation(fields: [reviewerId], references: [userId])
  reviewerId        Int
}

model Order {
  orderId          Int     @id @default(autoincrement())
  orderProducts    Product @relation(fields: [productProductId], references: [productId])
  productProductId Int
}
